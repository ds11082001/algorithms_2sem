#include <iostream>
#include <queue>
#include <vector>

const int MAX_VALUE = 6e8;

std::vector<int> bfs(std::vector<std::vector<int>> &g, int u) {
    int n = g.size();
    std::vector<int> dist(n, MAX_VALUE);
    std::queue<int> q;
    q.push(u);
    dist[u] = 0;
    while (not q.empty()) { // работает. Не !, потому что, как по мне, текст выглядит некрасиво после ! :)
        int v = q.front();
        q.pop();
        for (int to : g[v]) {
            if (dist[to] > dist[v] + 1) {
                q.push(to);
                dist[to] = dist[v] + 1;
            }
        }
    }
    return dist;
}

void input(std::vector<std::vector<int>> &g, int m) {
    for (int i = 0; i < m; ++i) {
        int from, to;
        std::cin >> from >> to;
        from--;
        to--;
        g[from].push_back(to);
        g[to].push_back(from);
    }
}

int findMinDist(std::vector<int> &distA, std::vector<int> &distB, std::vector<int> &distC) {
    int minDist = MAX_VALUE;
    for (int i = 0; i < distA.size(); ++i) {
        minDist = std::min(minDist, distA[i] + distB[i] + distC[i]);
    }
    return minDist;
}

int main() {
    int n, m;
    std::cin >> n >> m;
    int a, b, c;
    std::cin >> a >> b >> c;
    a--;
    b--;
    c--;
    std::vector<std::vector<int>> g(n);
    input(g, m);
    std::vector<int> distA = bfs(g, a);
    std::vector<int> distB = bfs(g, b);
    std::vector<int> distC = bfs(g, c);
    std::cout << findMinDist(distA, distB, distC);
    return 0;
}
